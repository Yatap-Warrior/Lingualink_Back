# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring Boot CI/CD

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Gradle Build
        run: ./gradlew bootJar

      - name: Docker Build and Dockerhub Push
        run:
          docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PW }}
          docker build -t ${{ secrets.DOCKERHUB_REPO }}/linglink-back .
          docker push ${{ secrets.DOCKER_REPO }}/linglink-back

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Docker Compose Up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script:
            sudo docker pull ${{ secrets.DOCKER_REPO }}/linglink-back
            docker-compose up -f docker-compose.yml up linglink-back
            docker image prune -f